{
    "questions": [{
            "questionText": " Who invented Java Programming?",
            "options": [{
                    "text": "Guido van Rossum"
                },
                {
                    "text": "James Gosling",
                    "correct": true
                },
                {
                    "text": "Dennis Ritchie"
                },
                {
                    "text": "Bjarne Stroustrup"
                }
            ],
            "explanation": " Java programming was developed by James Gosling at Sun Microsystems in 1995. James Gosling is well known as the father of Java."
        },
        {
            "questionText": "Which statement is true about Java?",
            "options": [{
                    "text": "Java is a sequence-dependent programming language"
                },
                {
                    "text": " Java is a code dependent programming language"
                },
                {
                    "text": " Java is a platform-dependent programming language"
                },
                {
                    "text": "Java is a platform independent programming language",
                    "correct": true
                    
                }
            ],
            "explanation": "Java is called ‘Platform Independent Language’ as it primarily works on the principle of ‘compile once, run everywhere’."
        },
        {
            "questionText": "Which component is used to compile, debug and execute the java programs?",
            "options": [{
                    "text": " JRE"
                },
                {
                    "text": "JIT"
                },
                {
                    "text": "JDK",
                    "correct": true
                },
                {
                    "text": "JVM"
                }
            ],
            "explanation": "JDK is a core component of Java Environment and provides all the tools, executables and binaries required to compile, debug and execute a Java Program."
        },
        {
            "questionText": " Which one of the following is not a Java feature?",
            "options": [{
                    "text": "Object-oriented"
                },
                {
                    "text": "Use of pointers",
                    "correct": true
                },
                {
                    "text": "Portable"
                },
                {
                    "text": "Dynamic and Extensible"
                }
            ],
            "explanation": "Pointers is not a Java feature. Java provides an efficient abstraction layer for developing without using a pointer in Java. Features of Java Programming are Portable, Architectural Neutral, Object-Oriented, Robust, Secure, Dynamic and Extensible, etc."
        },
        {
            "questionText": "Which of these cannot be used for a variable name in Java?",
            "options": [{
                    "text": "identifier & keyword"
                },
                {
                    "text": "identifier"
                },
                {
                    "text": "keyword",
                    "correct": true
                },
                {
                    "text": "none of the mentioned"
                }
            ],
            "explanation": "Keywords are specially reserved words that can not be used for naming a user defined variable, for example: class, int, for, etc."
        },
        {
            "questionText": "What is the extension of java code files?",
            "options": [{
                    "text": " .js"
                },
                {
                    "text": " .txt"
                },
                {
                    "text": " .class"
                },
                {
                    "text": " .java",
                    "correct": true
                }
            ],
            "explanation": "Java files have .java extension."
        },
        {
            "questionText": " Which environment variable is used to set the java path?",
            "options": [{
                    "text": "MAVEN_HOME"
                },
                {
                    "text": "CLASSPATH"
                },
                {
                    "text": "JAVA"
                },
                {
                    "text": "JAVA_HOME",
                    "correct": true
                }
            ],
            "explanation": "JAVA_HOME is used to store a path to the java installation."
        },
        {
            "questionText": "Which of the following is not an OOPS concept in Java?",
            "options": [{
                    "text": "Polymorphism"
                },
                {
                    "text": "Inheritance"
                },
                {
                    "text": "Compilation",
                    "correct": true
                },
                {
                    "text": "Encapsulation"
                }
            ],
            "explanation": "There are 4 OOPS concepts in Java. Inheritance, Encapsulation, Polymorphism and Abstraction."
        },
        {
            "questionText": "What is not the use of “this” keyword in Java?",
            "options": [{
                    "text": "Referring to the instance variable when a local variable has the same name"
                },
                {
                    "text": "Passing itself to the method of the same class",
                    "correct": true
                },
                {
                    "text": "Passing itself to another method"
                },
                {
                    "text": "Calling another constructor in constructor chaining"
                }
            ],
            "explanation": "“this” is an important keyword in java. It helps to distinguish between local variable and variables passed in the method as parameters."
        },
        {
            "questionText": "Which of the following is a type of polymorphism in Java Programming?",
            "options": [{
                    "text": "Multiple polymorphism"
                },
                {
                    "text": "Compile time polymorphism",
                    "correct": true
                },
                {
                    "text": "Multilevel polymorphism"
                },
                {
                    "text": "Execution time polymorphism"
                }
            ],
            "explanation": "There are two types of polymorphism in Java. Compile time polymorphism (overloading) and runtime polymorphism (overriding)."
        }
    ]
}